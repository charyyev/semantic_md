# This file acts as the base configuration file for the project.
# See configs/template.yaml for an example how to create a deviating configuration file
# By default the config/user.yaml configuration file is used.

model_type: "sobel_loss"
note: "sobel_experiments"
device: "cuda"

wandb:
    wandb: true
    entity: "semantic_md"
    project: "tests"
    group: "sobel"

resume:
    resume_training: false
    path: "/home/oliver/Documents/University/2023/ext-projects/3dv/output/model_multi_loss_overfit_lambda_exploration_lambda_semantic~~0.1___2023-04-30__17-48-47/checkpoints/epoch_200"
    epoch: 0
subpaths:
    output: "../output"
    data_location: "../HyperSim_Data_extracted"
    train_data: "data/hypersim/paths/train_img_path_extracted.txt"
    val_data: "data/hypersim/paths/val_img_path_extracted.txt"
    load: ""
    pretrained_weights_path: "pretrained_weights"
    logs: "logs"
    saved_figures: "saved_figures"

data_flags:
    # can be concat, border, semantic_convolution, simplified_onehot
    type: null
    parameters:
        seg_classes: 40
        simplified_onehot_classes: 40
        sobel_threshold: 20
        sobel_ksize: 5
    return_types:
        border: false
        simplified_onehot: false
        sobel: true

hyperparameters:
    train:
        batch_size: 32
        learning_rate: 0.001
        epochs: 15
        weight_decay: 0
        save_every: 2
        # depth parameters
        depth_loss_type: "L1"
        # semantic
        lambda_semantic: 0.5
        semantic_loss_type: "CE" #can be CE, Dice, FTL, Dice_CE, FTL_CE
        # contours
        lambda_contours: 0.5
        # sobel
        lambda_sobel: 1
        # other
        weight_lambda: 0.5
        weight_alpha: 0.8
        weight_gamma: 1.5
    val:
        batch_size: 32
        val_every: 1

transformations:
    resize:
        width: 342 #previous: 768
        height: 256 #previous: 576
    depth_range:
        min: 0
        max:  15

save_names:
    weights: "weights.pth"
    optimizer: "optimizer.pth"

pretrained_names:
    weights: "weights.pth"
    pretrained_metadata: "weights_object.pickle"

visualize:
    model_type: "triple_loss"
    model_path: ""
